{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\My-Github\\\\training-asg7\\\\src\\\\componunts\\\\Card\\\\CardContainer.jsx\",\n  _s = $RefreshSig$();\nimport CardPresintation from \"./CardPresintation\";\nimport React, { useState } from \"react\";\nimport { useDarkMode } from \"../customeMethods/DarkModeContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  // go to country details page\n  const navigate = useNavigate();\n  function goToCountry(code) {\n    navigate({\n      pathname: \"/FlagDetails\",\n      search: `?countryID=${code}`\n    });\n  }\n\n  //get Variables from Parent\n  const {\n    name,\n    area,\n    altSpellings,\n    flags,\n    population,\n    region,\n    capital,\n    ccn3\n  } = props.country;\n  let favCountries = props.favCountries;\n  //Dark or not\n  const {\n    darkMode\n  } = useDarkMode();\n\n  /** ============================ Favorite Section ============================ **/\n  //favCountry variable to handale changes in favivorite countries \"Drag & Drop, Clicked btn\"\n  let [favCountry, setFavCountry] = useState({\n    area: 0,\n    img: \"\",\n    name: \"country\"\n  });\n\n  //Start of Dragging\n  function dragCard(e, area, img, name) {\n    e.target.style.opacity = 0.5;\n    img = img.toLowerCase();\n    let imagURL = `https://flagcdn.com/${img}.svg`;\n    favCountry.area = area;\n    favCountry.img = imagURL;\n    favCountry.name = name;\n    props.handleFavCountry(favCountry); // Pass the favCountry data to the parent component\n  }\n  //End of Dragging\n  function endDragCard(e) {\n    favCountry = {\n      area: 0,\n      img: \"\",\n      name: \"country\"\n    };\n    e.target.style.opacity = 1;\n  }\n\n  // Handale the Star Fav Btn click\n  function handaleFavBtn(e, area, img, name) {\n    if (e.target.classList.contains(\"clicked\")) {\n      e.target.classList.remove(\"clicked\");\n      props.deleteCountry(area);\n    } else {\n      e.target.classList.add(\"clicked\");\n      let favClicked = {\n        area: 0,\n        img: \"\",\n        name: \"\"\n      };\n      img = img.toLowerCase();\n      let imagURL = `https://flagcdn.com/${img}.svg`;\n      favClicked.area = area;\n      favClicked.img = imagURL;\n      favClicked.name = name;\n      props.storeInLocalStorage(favClicked);\n    }\n  }\n  let favBtnContent = ``;\n  let isFav = favCountries.findIndex(element => element.area == area);\n  if (isFav !== -1) {\n    favBtnContent = /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: e => handaleFavBtn(e, area, altSpellings[0], name.official),\n      className: \"fa-solid fa-star clicked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  } else {\n    favBtnContent = /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: e => handaleFavBtn(e, area, altSpellings[0], name.official),\n      className: \"fa-solid fa-star\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(CardPresintation, {\n    darkMode: darkMode,\n    dragCard: dragCard,\n    country: props.country,\n    goToCountry: goToCountry,\n    favBtnContent: favBtnContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"3atBj1NLJEW3RNHZmoj5ccRAgEM=\", false, function () {\n  return [useNavigate, useDarkMode];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["CardPresintation","React","useState","useDarkMode","useNavigate","jsxDEV","_jsxDEV","Card","props","_s","navigate","goToCountry","code","pathname","search","name","area","altSpellings","flags","population","region","capital","ccn3","country","favCountries","darkMode","favCountry","setFavCountry","img","dragCard","e","target","style","opacity","toLowerCase","imagURL","handleFavCountry","endDragCard","handaleFavBtn","classList","contains","remove","deleteCountry","add","favClicked","storeInLocalStorage","favBtnContent","isFav","findIndex","element","onClick","official","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/My-Github/training-asg7/src/componunts/Card/CardContainer.jsx"],"sourcesContent":["import CardPresintation from \"./CardPresintation\";\r\nimport React, { useState } from \"react\";\r\nimport { useDarkMode } from \"../customeMethods/DarkModeContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n  // go to country details page\r\n  const navigate = useNavigate();\r\n  function goToCountry(code) {\r\n    navigate({\r\n      pathname: \"/FlagDetails\",\r\n      search: `?countryID=${code}`,\r\n    });\r\n  }\r\n\r\n  //get Variables from Parent\r\n  const { name, area, altSpellings, flags, population, region, capital, ccn3 } =\r\n    props.country;\r\n\r\n  let favCountries = props.favCountries;\r\n  //Dark or not\r\n  const { darkMode } = useDarkMode();\r\n\r\n  /** ============================ Favorite Section ============================ **/\r\n  //favCountry variable to handale changes in favivorite countries \"Drag & Drop, Clicked btn\"\r\n  let [favCountry, setFavCountry] = useState({\r\n    area: 0,\r\n    img: \"\",\r\n    name: \"country\",\r\n  });\r\n\r\n  //Start of Dragging\r\n  function dragCard(e, area, img, name) {\r\n    e.target.style.opacity = 0.5;\r\n    img = img.toLowerCase();\r\n    let imagURL = `https://flagcdn.com/${img}.svg`;\r\n    favCountry.area = area;\r\n    favCountry.img = imagURL;\r\n    favCountry.name = name;\r\n    props.handleFavCountry(favCountry); // Pass the favCountry data to the parent component\r\n  }\r\n  //End of Dragging\r\n  function endDragCard(e) {\r\n    favCountry = {\r\n      area: 0,\r\n      img: \"\",\r\n      name: \"country\",\r\n    };\r\n    e.target.style.opacity = 1;\r\n  }\r\n\r\n  // Handale the Star Fav Btn click\r\n  function handaleFavBtn(e, area, img, name) {\r\n    if (e.target.classList.contains(\"clicked\")) {\r\n      e.target.classList.remove(\"clicked\");\r\n      props.deleteCountry(area);\r\n    } else {\r\n      e.target.classList.add(\"clicked\");\r\n      let favClicked = {\r\n        area: 0,\r\n        img: \"\",\r\n        name: \"\",\r\n      };\r\n      img = img.toLowerCase();\r\n      let imagURL = `https://flagcdn.com/${img}.svg`;\r\n      favClicked.area = area;\r\n      favClicked.img = imagURL;\r\n      favClicked.name = name;\r\n      props.storeInLocalStorage(favClicked);\r\n    }\r\n  }\r\n\r\n  let favBtnContent = ``;\r\n  let isFav = favCountries.findIndex((element) => element.area == area);\r\n\r\n  if (isFav !== -1) {\r\n    favBtnContent = (\r\n      <i\r\n        onClick={(e) => handaleFavBtn(e, area, altSpellings[0], name.official)}\r\n        className=\"fa-solid fa-star clicked\"\r\n      ></i>\r\n    );\r\n  } else {\r\n    favBtnContent = (\r\n      <i\r\n        onClick={(e) => handaleFavBtn(e, area, altSpellings[0], name.official)}\r\n        className=\"fa-solid fa-star\"\r\n      ></i>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CardPresintation\r\n      darkMode={darkMode}\r\n      dragCard={dragCard}\r\n      country={props.country}\r\n      goToCountry={goToCountry}\r\n      favBtnContent={favBtnContent}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Card;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}